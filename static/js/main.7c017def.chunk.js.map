{"version":3,"sources":["logo.png","assets/bk.png","assets/bishk.png","assets/kshe.png","assets/vardy.png","assets/sak.png","assets/bhogra.png","assets/madhav.png","Login.js","Callback.js","Uploader.js","Feed.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Login","props","react_default","a","createElement","className","src","logo","alt","class","href","Callback","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","renderRedirect","state","redirect","react_router","to","renderLoaer","statusValue","code","URLSearchParams","window","location","search","get","undefined","console","log","Axios","then","response","setState","catch","error","statusText","React","Component","Uploader","file","onFormSubmit","bind","assertThisInitialized","onChange","fileUpload","e","preventDefault","data","target","files","formData","FormData","append","axios","post","headers","content-type","onSubmit","type","name","members","count","image","bishkDp","bkDp","ksheDp","vardyDp","bhograDp","madhavDp","sakDp","Feed","render","map","member","index","Feed_MemberTile","key","MemberTile","style","backgroundImage","concat","App","react_router_dom","path","exact","component","Boolean","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7c017def.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c7b4b3ff.png\";","module.exports = __webpack_public_path__ + \"static/media/bk.f8b7b4e4.png\";","module.exports = __webpack_public_path__ + \"static/media/bishk.50b51b1c.png\";","module.exports = __webpack_public_path__ + \"static/media/kshe.7652bf60.png\";","module.exports = __webpack_public_path__ + \"static/media/vardy.189a9088.png\";","module.exports = __webpack_public_path__ + \"static/media/sak.bca7fa9d.png\";","module.exports = __webpack_public_path__ + \"static/media/bhogra.1de1af23.png\";","module.exports = __webpack_public_path__ + \"static/media/madhav.0e7c1ecc.png\";","import React from \"react\";\nimport logo from \"./logo.png\"\n\nconst Login = (props) => {\n\n    return (\n        <div className=\"content-wrapper\">\n            <div className=\"login-wrapper\">\n                <div className=\"login-box\">\n                    <img className=\"logo\" src={logo} alt=\"Logo\"/>\n                    <h1 class=\"serif\">Berlin Wall</h1>\n                    <a className=\"login-link\" href=\"https://github.com/login/oauth/authorize?client_id=Iv1.ab929d25982c75d7&scope=repo\"\n                    ><button>Continue with GitHub</button></a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Login;","import React from \"react\";\nimport Axios from 'axios';\nimport logo from \"./logo.png\"\nimport { Redirect } from \"react-router-dom\";\n\nclass Callback extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            statusValue: 0,\n            redirect: false\n        };\n        const urlParams = new URLSearchParams(window.location.search);\n        const code = urlParams.get('code');\n    \n        if (typeof code !== undefined && code !== null) {\n            console.log(\"RECEIVED CODE\", code);\n            Axios.get(\"https://berlinwall.herokuapp.com/api/auth?code=\"+code)\n            .then((response) => {\n            console.log(response);\n            this.setState({statusValue: 1});\n            this.setState({redirect: true});\n            }).catch((error) => {\n            this.setState({statusText: error});\n            })\n        }\n    }\n\n    renderRedirect = () => {\n        if (this.state.redirect) {\n          return <Redirect to='/feed' />\n        }\n    }\n\n    renderLoaer = () => {\n        return {}\n    }\n\n\n    render() {\n        \n\n    return (\n        <div className=\"content-wrapper\">\n            <div className=\"login-wrapper\">\n                {this.renderRedirect()}\n                <div className=\"login-box\">\n                    <img className=\"logo\" src={logo} alt=\"Logo\"/>\n                    <h1 className=\"serif\">Berlin Wall</h1>\n                    <div className=\"lds-ellipsis\">\n                        <div></div>\n                        <div></div>\n                        <div></div>\n                    <div></div></div>\n                </div>\n            </div>\n        </div>\n    )\n    }\n    \n}\n\nexport default Callback;","import React from \"react\";\nimport axios from 'axios';\n\nclass Uploader extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            file: null\n        }\n        this.onFormSubmit = this.onFormSubmit.bind(this)\n        this.onChange = this.onChange.bind(this)\n        this.fileUpload = this.fileUpload.bind(this)\n    }\n    onFormSubmit(e) {\n        e.preventDefault() // Stop form submit\n        this.fileUpload(this.state.file).then((response) => {\n            console.log(response.data);\n        })\n    }\n    onChange(e) {\n        this.setState({ file: e.target.files[0] })\n    }\n    fileUpload(file) {\n        const url = 'https://berlinwall.herokuapp.com/api/upload';\n        const formData = new FormData();\n        formData.append('example', file)\n        const config = {\n            headers: {\n                'content-type': 'multipart/form-data'\n            }\n        }\n        return axios.post(url, formData, config)\n    }\n\n    render() {\n        return (\n            <div className=\"login-wrapper\">\n                <div className=\"login-box\">\n                    <form onSubmit={this.onFormSubmit}>\n                        <h1>File Upload</h1>\n                        <input type=\"file\" name=\"example\" onChange={this.onChange} />\n                        <button type=\"submit\">Upload</button>\n                    </form>\n                </div>\n            </div>\n        )\n    }\n}\n\n\nexport default Uploader;\n\n","import React from \"react\";\nimport bkDp from \"./assets/bk.png\";\nimport bishkDp from \"./assets/bishk.png\";\nimport ksheDp from \"./assets/kshe.png\";\nimport vardyDp from \"./assets/vardy.png\";\nimport sakDp from \"./assets/sak.png\";\nimport bhograDp from \"./assets/bhogra.png\";\nimport madhavDp from \"./assets/madhav.png\";\n\nconst members = [\n    {\n        name: \"bishk\",\n        count: 33,\n        image: bishkDp\n    },\n    {\n        name: \"bk\",\n        count: 20,\n        image: bkDp\n    },\n    {\n        name: \"kshe\",\n        count: 18,\n        image: ksheDp\n    },\n    {\n        name: \"vardy\",\n        count: 14,\n        image: vardyDp\n    },\n    {\n        name: \"bhogra\",\n        count: 12,\n        image: bhograDp\n    },\n    {\n        name: \"madhav\",\n        count: 7,\n        image: madhavDp\n    },\n    {\n        name: \"sak\",\n        count: 3,\n        image: sakDp\n    },\n]\n\nclass Feed extends React.Component {\n    render = () => {\n        return (\n            <div className=\"feed\">\n                <div className=\"nav\">\n                    <div className=\"content-wrapper\">\n                        <h1 className=\"serif\">Berlin Wall</h1>\n                    </div>\n                </div>\n                <div className=\"member-list\">\n                    <div className=\"content-wrapper\">\n                        <div className=\"member-flex\">\n                            {\n                                members.map((member, index) => (\n                                    <MemberTile name={member.name} count={member.count} image={member.image} key={index}/>\n                                ))\n                            }\n                        </div>\n                    </div>\n                </div>\n                <div className=\"tabuloid\">\n                    <div className=\"content-wrapper\">\n                        <div className=\"tab\">List</div>\n                        <div className=\"tab\">Upload</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Feed;\n\n\n\nconst MemberTile = (props) => {\n    return (\n        <div className=\"member-tile\">\n            <div className=\"thumbnail\" style={{\n                backgroundImage: `url(${props.image})`\n            }\n            }></div>\n            <h1 className=\"serif\">{props.name}</h1>\n            <h2>{props.count} Contributions</h2>\n        </div>\n    )\n}","import React from 'react';\nimport './App.css';\nimport Login from \"./Login\";\nimport Callback from \"./Callback\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Uploader from './Uploader';\nimport Feed from './Feed';\n\nfunction App() {\n  \n\n  /* \n  \n      <header className=\"App-header\">\n        <a\n          className=\"App-link\"\n          href=\"https://github.com/login/oauth/authorize?client_id=Iv1.ab929d25982c75d7\"\n        >\n          Sign In Using GitHub\n        </a>\n      </header>\n      ;\n    </div>\n    */\n  return (\n    \n    <div className=\"App\">\n      <Router>\n        <Route path=\"/\" exact component={Login} />\n        <Route path=\"/feed/\" exact component={Feed} />\n        <Route path=\"/callback/\" component={Callback} />\n        <Route path=\"/upload/\" component={Uploader} />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}